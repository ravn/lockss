Name of publisher: Palgrave Macmillan Books - affiliated with Nature 	different than Palgrave Macmillan Journals which uses Nature PluginPublishing platform?:     NOTE - writing this analysis after an initial plugin was written (though a while    ago).  Use the analysis to determine if the plugin is worth using as a starting point    or perhaps it's even close to done.RT: ??JIRA:PD-66Plugin name suggestion: (eg. PubNamePlugin) clockssPalgraveBookPluginClockss? [yes/no]: YES		GLN? [yes/no]:			NOPLN? [and name thereof]: NOTDB information:    PARAMS - base_url     PARAMS - book_isbn    ATTRS: year, doi, name (title), authorBase url: (eg. http://www.pub-name.org/) http://www.palgraveconnect.com/Start URL(s): Based on the doi of the bookhttp://www.palgraveconnect.com/pc/doifinder/doi1st/doi2nd    note that the doi is "10.1057/<book_isbn>"    which is why this plugin was written using the book_isbn as a parameter - perhaps DOI might be better?Is the permission page in a different location? If so, where?How does the permission statement work?     PERMISSION is a text statement at the bottom of the start url for each bookPick 3 AUs that you are using for initial evaluation? a) http://www.palgraveconnect.com/pc/doifinder/10.1057/9780230554719b) http://www.palgraveconnect.com/pc/doifinder/10.1057/9781137303073c) http://www.palgraveconnect.com/pc/doifinder/10.1057/9781137031044-----------------------URL & SITE LAYOUT SECTION-----------------------Refetch Depth (default is 1)A book is fairly flat. There is the information on the book information page (which is the same as the start_url)and then this leads to a couple of other pages - one which is a book viewer navigator html pageThis html page has links but these links are the same as were accessible from the book info page.And I'm not yet sure we want to collect the html book viewer because it'sjust got a navigator for the pdf which we could download directly.But at any rate, it would seem that a refetch depth of 1 would be fine.    Crawl rules & Content Layout:start_url: <base_url>/pc/doifinder/<doi1>/<doi2>    where <doi2> is the same as <book_isbn>    this is the primary book information page and seems to have all the links we needview html page: <base_url>/pc/<book_group_name>/browse/inside/<doi2>.html    This page provides a navigator through an embedded html with TOC selection     as well as additional links to pdf and other versions    also a left hand column that includes reviews, author info, etcpdf download page: <base_url>/pc/<book_group_name>/browse/inside/download/<doi2>.pdf     This link goes to an all-in-one pdf of the bookcitation download link:    So far I haven't figured out what the direct URL would be, but the link     downloads a RIS citation file for the book              Images, Figures & TablesDOI patternIf this publisher uses DOIs, they may follow a pattern. It can be helpful to know what the pattern is. Give 3 examples of DOIs for this publisher including both parts (eg 101234/Blah_xxx124Is1)a)b)c)Other? Any other content specific to an article that wasn't listed above?? Give examples.Addition Links to Include/ExcludeNow go back to both an issue table of contents page (or equivalent) AND an article html page and look at all the links on this page. This is easiest to do in firefox --> Page Info [Links tab].  Scan all the links and note items that might need to be explicitly included or excluded (that wouldn't be under normal paths). If in doubt, just add an example URL in here.Links to consider excluding  underneath <base_url>, but includes something general, such as author info, citedby, servlet, searchId, etc  javascript or style sheet links that seem to have a name that might be automatically generated (includes   date or hash string in the name, eg. <base_url>/cssJawr/N1854254985/style.css or LEKEJEEHEJ334449595.css).    outside images (twitter bird, institute logo) that have local copies under the base_url but would vary depending  on which machine is collecting ("Welcome Stanford University" with a copy of the Stanford logo - this   image would get collected by default if it ended in ".jpg" but would not be collected by an Indiana machineLinks to consider including  not underneath <base_url>, but looks specific to article content, such as images that live under a different base    underneath <base_url> and contains thins like showSupplements, showImage, downloadCitation)Does this site use automatically generated content?? View the page source for an article html page and look for something in the <head> section that looks like:   __viewstate.X29DKTUELDKDHFLDKDN...   __eventstate.KDIEJTEJSDODIJGJEKE...  These types of items are generated by ASP and will change with each viewing of the page.  Please note the URL.NotesAnything else that you think the plugin writer needs to be aware of in terms of URL layout.--------------------------URL NORMALIZATION---------------------------------------------As you click around from article to article or issue TOC are you getting arguments on the end of your URLs that are likely unnecessary.  Arguments are those items that follow a ? and may be separated with &.  Arguments that are necessary to identify the page usually look like this:  ?showItem=<identifier>&format=pdfwhereas arguments that might be unnecessary might look like this  ?rss=13&prev_item=333kfkfkfjk&lang=3nThese arguments might be keeping track of browsing history or date or language. You can test whether the arguments are needed by re-entering the URL without the arguments and seeing if you get the same page.Give examples of URLs with arguments that we might need to remove. (eg. <full_url>?cookieSet=1 or <full_url>?prevSearch=3)----------------------HTML HASH FILTERING-----------------------------------------Look at several types of html pages and look for types of items that are time or viewer dependent. These items will need to get hashed out. The plugin writer will need to go in to the page source to figure out how to remove the items, but you can identify which elements likely need to be removed.  Here are suggestions for the type of things to look for. Make a note of the type of items you find and why you think they will need removal.  Give any URLs necessary to find the items you mention. ------Look for these sorts of things. Remove this list and replace it with what you find---------  Name and/or logo of subscriber institution  Login identity in shopping cart area  Copyright on page showing year  Cited by section   Issue link which points to current issue  Product price listing  Footer section including adds or date  Related content or related article search  Impact factor or viewing count  Session historyAnd if you view the page source (firefox -> Page Source) look for the following:<script/> tags with subscriber information, dates, or <!-- ... --> comment pairs that includes creation or modification datesfxlink javascript commandsAnything else you think might need to be removed from hashing??-------------------HTML CRAWL FILTERING----------------------------------------If the URL pattern for articles is non-deterministic (that is, it doesn't contain volume,  year, journal id specific information) then there is no way to know which journal/issue/volume an article is from.  deterministic URL: <base_url>/content/vol24/iss1/art1.pdf non-deterministic URL: <base_url/content/doi/pdf/11134/myartdoi12which makes it very possible to crawl to content not from the original AU. If this is not the case, write "not applicable" or if it is, look for likely places where this could happen, such as those listed below. If you find some, please provide the URL for the page where you saw them. ------Look for these sorts of things. Remove this list and replace it with what you find---------  Cited By Section - a link or section of links which point to articles that reference this article  Corrigendum or Article Correction links  Related Content or Related Articles  Original Article (pointing back from a corrected article to the original)  Prev Issue/Next Issue links  Prev Article/Next Article links (sometimes these dead end at the ends of an issue, sometimes not)-----------------------PDF FILTER--------------------------------------------Some PDF files change every time they're viewed and will require a PDF filter. Download a PDF file of an article and view it. Does it contain an obvious watermark with date downloaded or some other time/viewer specific information?In Acrobat viewer look at the properties of the file. Is the date today's date? If so it's likely to be generated on the fly. If so, note the URL of the PDF you downloaded.Now download the same PDF file a second time from a different browser (to ensure you're not getting cached version)In a terminal window go to the directory that contain these two different versions of the same PDF file and run:%diff -a pdf_version1.pdf pdf_version2.pdfIf there is a difference note that here and give the URL to the URL you tested.-----------------------METADATA EXTRACTION--------------------------------------Metadata is provided in a variety of ways depending on the publisher. For example, Atypon plugins usually provide metadata in <meta.../> tags embedded in the html of an abstract and/or full text html page.  This only concerns article pages, not TOC pages.  See if this is the case. Go to an article abstract or html page and do two things:View the page info (firefox -> Page Info [General]). You should see a listing of metadata,  with names  such as dc.Title, dc. Creator, author, content_publisher, and then a value.View the page source and search for the following "<meta" there should be about as many of these as there were items listed on the General Page Info page.Other ways a publisher might provide metadata (if not as above) is as a downloadable citation file (ris, endnote, bibtex, etc). If so, please provide the format options and some examples for download.  Some publishers don't provide explicit metadata and we need to parse the source html for basic information. Is that the case?