Name of publisher: Channel View Publications (imprint - Multilingual Matters)Publishing platform?: noneRT: 4680RU: 4647Is this triggered content (no longer available from publisher)? UnknownHow is this content delivered to us?Push (the publisher uploads it to our ftp site)? Uploaded by CoreSource    Schedule: Unknown      Do they deliver only incremental content or may there be repeat content:Plugin name suggestion: (eg. PubNamePlugin) ClockssChannelViewSourcePluginClockss? [yes/no]: YES		GLN? [yes/no]:			PLN? [and name thereof]:Does this content represent Books? YESJournals?Other?TDB information- same as other Clockss source plugins    PARAMS - global; base_url    PARAMS - journal specific; year_name    ATTRS:Base url: TBD but probably http://clockss-ingest.lockss.org/sourcefiles/channelview-released/Where will we be serving the content from?:Is there a smaller development-only location for testing?:Start URL(s):  Probably differentiate by delivery year although that will not match with metadata. eg:    http://clockss-ingest.lockss.org/sourcefiles/channelview-released/2013Do we need to modify the existing directory structure under the base url for our purposes?   YES - underneath the top directory "channelview-release" is a subdirectory "Channel_View_Publications",    probably an artifact of how CoreSource manages their various content buckets. We do not need this additional   subdirectory.  Our AU buckets (per year, probably) should sit right under the channelview-released level    Types of content:For a particular AU (usually, a year's worth of content), what types of files may be included        *.epub    *.pdf    *.xml    *.jpg    How are these file types used:                For each book there seems to be BOTH a epub and a pdf version although the filenames are different so they is        no obvious correlation by name alone.        The filename number seems to be the ISBN-13 based on its use in the xml file, but this would imply that        the epub version of the book and the pdf version of the book have different ISBN-13 numbers...        The *.xml file lists multiple <Product> items and each <Product> represents one format of a book. Again, no        obvious way to correlate the different versions of a single title except maybe through underlying metadata        (title, author, etc).        Each <num>.pdf or <num>.epub has a corresponding <num>.jpg which is an image of the cover of the book. Since there        is an epub and pdf format of each book, there are differently named, but otherwise same looking images of the cover.  Naming convention if identifiable:    <NUM>.pdf or <NUM>.xml The number appears to be unique to the title/format of the book which no obvious identifiers.    The number is the RecordReference listed just under <Product> in the xml file.        The XML file is called either Channel_View_Publications_Metadata_LONGNUMBER.xml        where the long number is based in some way on generation date/time        or    Metadata_Only_Channel_View_Publications_Metadata_LONGNUMBER.xml        which seems to mean nothing other than the way the person at CoreSource named it at the time.Is there anything in the AU directory that should NOT be collected?    *.md5sumNotes: Anything else worth noting about the source content?----------------------SUBSTANCE DEFINITION--------------------------------------Which files in a directory define substance?    eg: *.pdf, but not *.xml        In general we should collect both *.pdf and *.epub but substance is probably only    the *.pdf because there is no general epubs viewer    The *.jpg would not be substance    ------------------------ARTICLE ITERATION---------------------------------------Given the file types that may be provided for content, what is the map for contenttype to article target:            The trick is going to be getting the epub and the pdf versions that match    to identify each other. The only correspondence is in the metadata included in the XML file.        -----------------------METADATA EXTRACTION--------------------------------------How is the publisher providing metadata for the content? We do not want to ingest sourcethat does not have accessible metadata. Scraping information out of a PDF file is not sufficient.Does the publisher provide XML files with metadata?    I am not knowledgeable enough to know, but Phil tells me the XML files are in ONIX for books format.     I must do more research on this, but it seems consistent and parseable. 